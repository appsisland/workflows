name: Convert Figma â†’ Flutter

on:
  workflow_dispatch:
    inputs:
      figma_file_key:
        description: 'Figma File Key'
        required: true
      figma_token:
        description: 'Figma Personal Access Token'
        required: true
      project_name:
        description: 'Project name (used as folder)'
        required: true

jobs:
  parabeac:
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Set up Dart
      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '2.19.6'

      # 3) Debug: List available branches in Parabeac Core
      - name: List Parabeac Core branches
        run: |
          git ls-remote --heads https://github.com/Parabeac/parabeac-core.git

      # 4) Clone Parabeac Core
      - name: Clone Parabeac Core
        run: |
          git clone --branch master https://github.com/Parabeac/parabeac-core.git parabeac || {
            echo "Failed to clone the repository. Check if the branch exists or repository is accessible."
            exit 1
          }
          cd parabeac
          git checkout master # Replace with a specific commit or tag if needed, e.g., git checkout 7b2f1a3
        continue-on-error: false

      # 5) Install Parabeac dependencies
      - name: Install Parabeac dependencies
        run: |
          cd parabeac
          dart pub get
        env:
          SAC_ENDPOINT: "1" # Skip SketchAssetConverter

      # 6) Generate Flutter code
      - name: Generate Flutter for ${{ github.event.inputs.project_name }}
        run: |
          mkdir -p ../generated/${{ github.event.inputs.project_name }}
          cd parabeac
          dart --enable-asserts parabeac.dart \
            -f ${{ github.event.inputs.figma_file_key }} \
            -k ${{ github.event.inputs.figma_token }} \
            -o ../generated/${{ github.event.inputs.project_name }} \
            --verbose
        env:
          SAC_ENDPOINT: "1"

      # 7) Commit and push generated code
      - name: Commit & push generated code
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add generated/${{ github.event.inputs.project_name }}
          git diff-index --quiet HEAD || \
            git commit -m "chore: auto-generate Flutter for ${{ github.event.inputs.project_name }}"
          git push
        continue-on-error: false

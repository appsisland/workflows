name: Convert Figma ‚Üí Flutter

on:
  workflow_dispatch:
    inputs:
      figma_file_key:
        description: 'Figma File Key'
        required: true
      figma_token:
        description: 'Figma Personal Access Token'
        required: true
      project_name:
        description: 'Project name (used as folder)'
        required: true

jobs:
  parabeac:
    runs-on: ubuntu-latest
    env:
      SAC_ENDPOINT: "1"
      PBDL_LOG_LEVEL: DEBUG

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Dart 2.x (compatible with Parabeac Core)
        uses: dart-lang/setup-dart@v1
        with:
          sdk: '2.19.6'

      - name: "Debug: Dart & env"
        run: |
          dart --version
          echo "Runner env:"
          env

      - name: Clone Parabeac Core @ v4.0.0
        run: |
          git clone --depth=1 --branch v4.0.0 https://github.com/Parabeac/parabeac-core.git parabeac
          echo "Parabeac-Core checked out at:"
          (cd parabeac && git rev-parse HEAD)

      - name: List Parabeac Core files
        run: |
          ls -R parabeac

      - name: Install Parabeac dependencies
        run: |
          cd parabeac
          dart pub get

      - name: Generate Flutter for "${{ github.event.inputs.project_name }}"
        run: |
          mkdir -p "generated/${{ github.event.inputs.project_name }}"
          cd parabeac
          echo "‚Üí Generating from file key: ${{ github.event.inputs.figma_file_key }}"
          echo "‚Üí Output dir: ../generated/${{ github.event.inputs.project_name }}"
          dart --enable-asserts parabeac.dart \
            -f "${{ github.event.inputs.figma_file_key }}" \
            -k "${{ github.event.inputs.figma_token }}" \
            -o "../generated/${{ github.event.inputs.project_name }}" \
          || { echo "‚ÄºÔ∏è Parabeac failed with exit code $?"; exit 1; }

      - name: List generated output
        run: |
          echo "üìÇ Contents of generated/${{ github.event.inputs.project_name }}:"
          ls -R "../generated/${{ github.event.inputs.project_name }}" || echo " (no files!)"

      - name: "Commit & push generated code"
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "generated/${{ github.event.inputs.project_name }}"
          git diff-index --quiet HEAD \
            || git commit -m "chore: auto-generate Flutter for ${{ github.event.inputs.project_name }}"
          git push
